'use strict';
module.exports = (sequelize, DataTypes) => {
  const verify_payment = sequelize.define('verify_payment', {
    status: DataTypes.STRING,
    message: DataTypes.STRING,
    txid: DataTypes.STRING,
    txref: DataTypes.STRING,
    flwref: DataTypes.STRING,
    devicefingerprint: DataTypes.STRING,
    cycle: DataTypes.STRING,
    amount: DataTypes.STRING,
    currency: DataTypes.STRING,
    chargedamount: DataTypes.STRING,
    appfee: DataTypes.STRING,
    merchantfee: DataTypes.STRING,
    merchantbearsfee: DataTypes.STRING,
    chargecode: DataTypes.STRING,
    chargemessage: DataTypes.STRING,
    authmodel: DataTypes.STRING,
    ip: DataTypes.STRING,
    narration: DataTypes.STRING,
    status: DataTypes.STRING,
    vbvcode: DataTypes.STRING,
    vbvmessage: DataTypes.STRING,
    authurl: DataTypes.STRING,
    acctcode: DataTypes.STRING,
    acctmessage: DataTypes.STRING,
    paymenttype: DataTypes.STRING,
    paymentid: DataTypes.STRING,
    fraudstatus: DataTypes.STRING,
    chargetype: DataTypes.STRING,
    createdday: DataTypes.STRING,
    createddayname: DataTypes.STRING,
    createdweek: DataTypes.STRING,
    createdmonth: DataTypes.STRING,
    createdmonthname: DataTypes.STRING,
    createdquarter: DataTypes.STRING,
    createdyear: DataTypes.STRING,
    createdyearisleap: DataTypes.STRING,
    createddayispublicholiday: DataTypes.STRING,
    createdhour: DataTypes.STRING,
    createdminute: DataTypes.STRING,
    createdpmam: DataTypes.STRING,
    created: DataTypes.STRING,
    customerid: DataTypes.STRING,
    custphone: DataTypes.STRING,
    custnetworkprovider: DataTypes.STRING,
    custname: DataTypes.STRING,
    custemail: DataTypes.STRING,
    custemailprovider: DataTypes.STRING,
    custcreated: DataTypes.STRING,
    accountid: DataTypes.STRING,
    acctbusinessname: DataTypes.STRING,
    acctcontactperson: DataTypes.STRING,
    acctcountry: DataTypes.STRING,
    acctbearsfeeattransactiontime: DataTypes.STRING,
    acctparent: DataTypes.STRING,
    acctvpcmerchant: DataTypes.STRING,
    acctalias: DataTypes.STRING,
    acctisliveapproved: DataTypes.STRING,
    orderref: DataTypes.STRING,
    paymentplan: DataTypes.STRING,
    paymentpage: DataTypes.STRING,
    raveref: DataTypes.STRING,
    meta: DataTypes.STRING
  }, { engine: 'MyISAM CHARACTER SET latin1' });
  verify_payment.associate = function(models) {
    // associations can be defined here
  };
  return verify_payment;
};